{"version":3,"sources":["components/EditUserForm.js","components/TableToDoList.js","components/ModalNewHomeWork.js","components/ChallengeThree.js","App.js","serviceWorker.js","index.js"],"names":["EditUserFrom","props","handleInputChange","e","target","name","value","checked","type","setCurrentHomeWork","currentHomeWork","Modal","show","Header","Title","Body","onSubmit","event","preventDefault","handleShow","className","placeholder","required","onChange","description","class","id","for","onClick","handleClose","EditUser","ListTable","useState","setShow","scope","homeWorks","length","map","homeWork","key","deleteUser","colSpan","EditUserForm","newUser","setHomeWorks","NewHomeWork","data","setData","Button","addHomeWork","reset","Footer","variant","Todolist","count","setCount","useEffect","document","title","ModalNewHomeWork","uuidv4","TableToDoList","filter","Challenge","ChallengeThree","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.77b1f9ba.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Modal } from 'react-bootstrap'\r\n\r\nfunction EditUserFrom(props) {\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault()\r\n    props.handleShow()\r\n  }\r\n  const handleInputChange = (e) => {\r\n    const { name, value, checked, type } = e.target\r\n    props.setCurrentHomeWork({\r\n      ...props.currentHomeWork, \r\n      [name]: type === \"checkbox\" ? checked : value\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <Modal show={props.show}>\r\n        <Modal.Header>\r\n          <Modal.Title>Register the table fields</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <form onSubmit={onSubmit}>\r\n            <div className=\"form-row\">\r\n              <div className=\"col-6\">\r\n                <label>Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\" Name\"\r\n                  name=\"name\"\r\n                  value={props.currentHomeWork && props.currentHomeWork.name}\r\n                  required={true}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <label>Description</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\" Description\"\r\n                  name=\"description\"\r\n                  value={props.currentHomeWork && props.currentHomeWork.description}\r\n                  required={true}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </div>\r\n              <div className=\"custom-control custom-checkbox\">\r\n                <input\r\n                  name=\"checked\"\r\n                  type=\"checkbox\"\r\n                  class=\"custom-control-input\"\r\n                  id=\"customCheck1\"\r\n                  onChange={handleInputChange} />\r\n                <label class=\"custom-control-label\" for=\"customCheck1\">Confirm changes</label>\r\n              </div>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button className=\"btn btn-secondary\"\r\n                onClick={props.handleClose}>\r\n                Close\r\n              </button>\r\n              <button className=\"btn btn-primary\"\r\n                onClick={() => props.EditUser()}>\r\n                Save Changes\r\n              </button>\r\n\r\n            </div>\r\n          </form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditUserFrom","import React, { useState } from 'react'\r\nimport EditUserForm from '../components/EditUserForm.js'\r\n\r\nconst ListTable = (props) => {\r\n  const [show, setShow] = useState(false);\r\n  const [currentHomeWork, setCurrentHomeWork] = useState(null);\r\n \r\n  const handleShow = () => {\r\n    setShow(!show)\r\n  }\r\n  const EditUser = () => {\r\n    const newUser = props.homeWorks.map((homeWork) => {\r\n      if (homeWork.id === currentHomeWork.id ) {\r\n        return currentHomeWork\r\n      } else {\r\n        return homeWork\r\n      }\r\n    });\r\n    { props.setHomeWorks(newUser) }\r\n  }\r\n  return (\r\n    <>\r\n      <table className=\"table table-bordered thead-light mt-5\">\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            <th scope=\"col-4\">Name</th>\r\n            <th scope=\"col-4\">Description</th>\r\n            <th scope=\"col-4\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody >\r\n          {props.homeWorks.length > 0 ? (\r\n            props.homeWorks.map((homeWork) => (\r\n              <tr key={homeWork.id} className={homeWork.checked ? 'homeWork-checked' : \"\"}>\r\n                <td >{homeWork.name}</td>\r\n                <td>{homeWork.description}</td>\r\n                <button className=\"btn btn-warning btn-md\"\r\n                  onClick={() => {\r\n                    setCurrentHomeWork(homeWork)\r\n                    handleShow()\r\n                  }}\r\n                >Edit User</button>\r\n                <button className=\"btn btn-danger btn-md\"\r\n                  onClick={() => { props.deleteUser(homeWork.id) }}>Delete</button>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n              <tr>\r\n                <td colSpan={3}>No task logs</td>\r\n              </tr>\r\n            )}\r\n        </tbody>\r\n      </table>\r\n      <EditUserForm\r\n        show={show}\r\n        setShow={setShow}\r\n        handleShow={handleShow}\r\n        currentHomeWork={currentHomeWork}\r\n        setCurrentHomeWork={setCurrentHomeWork}\r\n        EditUser={EditUser}\r\n      />\r\n    </>\r\n  )\r\n}\r\nexport default ListTable","import React, { useState } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\n\r\nconst NewHomeWork = (props) => {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [data, setData] = useState({\r\n    name: '',\r\n    description: ''\r\n  })\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target\r\n    setData({\r\n      ...data, [name]: value\r\n    });\r\n  }\r\n  const onSubmit = (event) => {\r\n    event.preventDefault()\r\n    props.addHomeWork(data);\r\n    handleClose();\r\n    //limpiar campos\r\n    event.target.reset();\r\n  };\r\n  return (\r\n    <div>\r\n      <Button className=\"btn btn-secondary btn-lg\" onClick={handleShow}>\r\n        Create task\r\n      </Button>\r\n      <Modal show={show}>\r\n        <form onSubmit={onSubmit}>\r\n          <Modal.Header>\r\n            <Modal.Title>Register the table fields</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"form-row\">\r\n              <div className=\"col-6\">\r\n                <label>Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\" Name\"\r\n                  name=\"name\"\r\n                  required=\"required\"\r\n                  onChange={handleInputChange}\r\n                />\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <label>Description</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\" Description\"\r\n                  name=\"description\"\r\n                  required=\"required\"\r\n                  onChange={handleInputChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Save Changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </form>\r\n\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default NewHomeWork;","import React, { useState, useEffect } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport TableToDoList from '../components/TableToDoList'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport ModalNewHomeWork from '../components/ModalNewHomeWork'\r\n\r\nfunction Todolist() {\r\n  const [homeWorks, setHomeWorks] = useState([])\r\n  const [count, setCount] = useState(0);\r\n  \r\n  useEffect(() => {\r\n    // Actualiza el título del documento usando la API del navegador\r\n    document.title = `you have ${count} taks`\r\n  },[count])\r\n  \r\n  const addHomeWork = (homeWork) => {\r\n    homeWork.id = uuidv4()\r\n    setHomeWorks([...homeWorks, homeWork])\r\n    setCount(count+1)\r\n  }\r\n  //elimina usuarios\r\n  const deleteUser = (id) => {\r\n    setHomeWorks(homeWorks.filter(homeWork => homeWork.id !== id))\r\n    setCount(count-1)\r\n  }\r\n  return (    \r\n    <div className=\"container h-100\"> \r\n      <div className=\"row\">\r\n      <h2 className=\"col-6 mt-3\">List of tasks</h2>\r\n        \r\n        <div className=\"col-6 mt-3\">\r\n          <div>\r\n            <ModalNewHomeWork addHomeWork={addHomeWork} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div>\r\n          <TableToDoList\r\n            homeWorks={homeWorks}\r\n            setHomeWorks={setHomeWorks}\r\n            deleteUser={deleteUser}\r\n            setCount={setCount}\r\n            count={count}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div> \r\n  )\r\n}\r\nexport default Todolist","import React from 'react';\r\n\r\nimport ChallengeThree from './components/ChallengeThree.js';\r\nimport Pruebas from './components/Pruebas';\r\n\r\nfunction Challenge (){\r\n  return(\r\n    <div>\r\n        <ChallengeThree/>\r\n      {/* <Pruebas/> */}\r\n    </div>\r\n  )\r\n }\r\n\r\nexport default Challenge\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}